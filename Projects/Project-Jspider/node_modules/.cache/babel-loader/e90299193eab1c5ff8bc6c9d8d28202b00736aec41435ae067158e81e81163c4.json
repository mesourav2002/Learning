{"ast":null,"code":"var _jsxFileName = \"D:\\\\J-spider_Learning\\\\Projects\\\\Project-Jspider\\\\src\\\\component\\\\Users.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useNavigate } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Users = () => {\n  _s();\n  let [users, setUsers] = useState([]);\n  useEffect(() => {\n    let fetchApi = () => {\n      fetch(\"https://jsonplaceholder.org/users\").then(resp => resp.json()).then(data => {\n        setUsers(data);\n      });\n    };\n    fetchApi();\n  }, [users]);\n  let navigate = useNavigate();\n  let handleClick = () => {\n    navigate(\"/adminportal/userLogin\");\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: users.map(elem => {\n          let {\n            firstname,\n            lastname\n          } = elem;\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"username\",\n              onClick: handleClick,\n              children: [firstname, \", \", lastname]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Users, \"tQeW378bQoqgu4hzmcqlbOseRgY=\", false, function () {\n  return [useNavigate];\n});\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Users","_s","users","setUsers","fetchApi","fetch","then","resp","json","data","navigate","handleClick","Fragment","children","className","map","elem","firstname","lastname","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/J-spider_Learning/Projects/Project-Jspider/src/component/Users.jsx"],"sourcesContent":["import React, { useState, useEffect, useNavigate } from \"react\";\r\n\r\nconst Users = () => {\r\n  let [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let fetchApi = () => {\r\n      fetch(\"https://jsonplaceholder.org/users\")\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n          setUsers(data);\r\n        });\r\n    };\r\n    fetchApi();\r\n  }, [users]);\r\n\r\n  let navigate = useNavigate();\r\n  let handleClick = () => {\r\n    navigate(\"/adminportal/userLogin\");\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"users\">\r\n        <div className=\"container\">\r\n        {\r\n          users.map((elem)=>{\r\n              let {firstname,lastname}=elem;\r\n              return(\r\n                <React.Fragment>\r\n                  <div className=\"username\" onClick={handleClick}>\r\n                    {firstname}, {lastname}\r\n                  </div>\r\n                </React.Fragment>\r\n              )\r\n          })\r\n        }\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd,IAAIQ,QAAQ,GAAGA,CAAA,KAAM;MACnBC,KAAK,CAAC,mCAAmC,CAAC,CACvCC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAC3BF,IAAI,CAAEG,IAAI,IAAK;QACdN,QAAQ,CAACM,IAAI,CAAC;MAChB,CAAC,CAAC;IACN,CAAC;IACDL,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAACF,KAAK,CAAC,CAAC;EAEX,IAAIQ,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC5B,IAAIc,WAAW,GAAGA,CAAA,KAAM;IACtBD,QAAQ,CAAC,wBAAwB,CAAC;EACpC,CAAC;EACD,oBACEX,OAAA,CAACL,KAAK,CAACkB,QAAQ;IAAAC,QAAA,eACbd,OAAA;MAAKe,SAAS,EAAC,OAAO;MAAAD,QAAA,eACpBd,OAAA;QAAKe,SAAS,EAAC,WAAW;QAAAD,QAAA,EAExBX,KAAK,CAACa,GAAG,CAAEC,IAAI,IAAG;UACd,IAAI;YAACC,SAAS;YAACC;UAAQ,CAAC,GAACF,IAAI;UAC7B,oBACEjB,OAAA,CAACL,KAAK,CAACkB,QAAQ;YAAAC,QAAA,eACbd,OAAA;cAAKe,SAAS,EAAC,UAAU;cAACK,OAAO,EAAER,WAAY;cAAAE,QAAA,GAC5CI,SAAS,EAAC,IAAE,EAACC,QAAQ;YAAA;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ,CAAC;QAEvB,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAErB,CAAC;AAACtB,EAAA,CAtCID,KAAK;EAAA,QAcMH,WAAW;AAAA;AAAA2B,EAAA,GAdtBxB,KAAK;AAwCX,eAAeA,KAAK;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}