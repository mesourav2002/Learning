{"ast":null,"code":"var _jsxFileName = \"D:\\\\J-spider_Learning\\\\react\\\\sourav\\\\src\\\\a\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\n// LoginPage.jsx\nimport React, { useState } from 'react';\nimport usersData from './UserData';\nimport DataShowPage from './DataShowPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [error, setError] = useState('');\n  const handleLogin = (id, password) => {\n    const user = usersData.find(user => user.id === id && user.password === password);\n    if (user) {\n      setIsLoggedIn(true);\n    } else {\n      setError('Invalid ID or password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          const id = e.target.elements.id.value;\n          const password = e.target.elements.password.value;\n          handleLogin(id, password);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"id\",\n            children: \"ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(DataShowPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"5K/64m7zmAOyB99gBxahCpMa9yY=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","usersData","DataShowPage","jsxDEV","_jsxDEV","LoginPage","_s","isLoggedIn","setIsLoggedIn","error","setError","handleLogin","id","password","user","find","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","target","elements","value","htmlFor","type","_c","$RefreshReg$"],"sources":["D:/J-spider_Learning/react/sourav/src/a/LoginPage.jsx"],"sourcesContent":["// LoginPage.jsx\r\nimport React, { useState } from 'react';\r\nimport usersData from './UserData';\r\nimport DataShowPage from './DataShowPage';\r\n\r\nfunction LoginPage() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleLogin = (id, password) => {\r\n    const user = usersData.find(user => user.id === id && user.password === password);\r\n    if (user) {\r\n      setIsLoggedIn(true);\r\n    } else {\r\n      setError('Invalid ID or password');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!isLoggedIn ? (\r\n        <div>\r\n          <h2>Login</h2>\r\n          <form onSubmit={(e) => {\r\n            e.preventDefault();\r\n            const id = e.target.elements.id.value;\r\n            const password = e.target.elements.password.value;\r\n            handleLogin(id, password);\r\n          }}>\r\n            <div>\r\n              <label htmlFor=\"id\">ID:</label>\r\n              <input type=\"text\" id=\"id\" />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"password\">Password:</label>\r\n              <input type=\"password\" id=\"password\" />\r\n            </div>\r\n            <button type=\"submit\">Login</button>\r\n            {error && <p>{error}</p>}\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <DataShowPage />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}