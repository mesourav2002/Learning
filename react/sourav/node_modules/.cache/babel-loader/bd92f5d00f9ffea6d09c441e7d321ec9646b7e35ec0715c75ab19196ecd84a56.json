{"ast":null,"code":"var _jsxFileName = \"D:\\\\J-spider_Learning\\\\react\\\\sourav\\\\src\\\\Component\\\\5 emp table\\\\Emp.jsx\";\nimport React from \"react\";\nimport EmpData from \"./EmpData\";\nimport \"./Emp.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Emp = () => {\n  console.log(EmpData);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empdata\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: \"Employee Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          border: 1,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Employee id\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Employee fname\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Employee Lname\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"age\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"job\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"salary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: EmpData.map(elem => {\n              let {\n                id,\n                fname,\n                lname,\n                age,\n                job,\n                salary\n              } = elem;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: fname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: lname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: age\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: job\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: salary\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 20\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = Emp;\nexport default Emp;\nvar _c;\n$RefreshReg$(_c, \"Emp\");","map":{"version":3,"names":["React","EmpData","jsxDEV","_jsxDEV","Fragment","_Fragment","Emp","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","border","map","elem","id","fname","lname","age","job","salary","_c","$RefreshReg$"],"sources":["D:/J-spider_Learning/react/sourav/src/Component/5 emp table/Emp.jsx"],"sourcesContent":["import React from \"react\";\r\nimport EmpData from \"./EmpData\";\r\nimport \"./Emp.css\";\r\n\r\nconst Emp = () => {\r\n  console.log(EmpData);\r\n  return (\r\n    <>\r\n      {/* <div className=\"text-center h2 bg-black text-bg-primary \">Emp Data</div>\r\n      <div className=\"table-data\">\r\n        {EmpData.map((elem) => {\r\n          let { id, fname, lname, age, job, salary } = elem;\r\n          return (\r\n            <table border={1}>\r\n              <tr>\r\n                <th>Id</th>\r\n                <th>First Name</th>\r\n                <th>Last Name</th>\r\n                <th>Age</th>\r\n                <th>Job</th>\r\n                <th>Salary</th>\r\n              </tr>\r\n              <tr>\r\n                <td>{id}</td>\r\n                <td>{fname}</td>\r\n                <td>{lname}</td>\r\n                <td>{age}</td>\r\n                <td>{job}</td>\r\n                <td>{salary}</td>\r\n              </tr>\r\n            </table>\r\n          );\r\n        })}\r\n      </div> */}\r\n      <div className=\"empdata\">\r\n        <div className=\"header\">Employee Table</div>\r\n        <div>\r\n            <table border={1}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Employee id</th>\r\n                        <th>Employee fname</th>\r\n                        <th>Employee Lname</th>\r\n                        <th>age</th>\r\n                        <th>job</th>\r\n                        <th>salary</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    EmpData.map((elem)=>{\r\n                        let { id, fname, lname, age, job, salary } = elem;\r\n                        return(\r\n                   <tr>\r\n                        <td>{id}</td>\r\n                        <td>{fname}</td>\r\n                        <td>{lname}</td>\r\n                        <td>{age}</td>\r\n                        <td>{job}</td>\r\n                        <td>{salary}</td>\r\n                    </tr>  \r\n                        )\r\n                    })\r\n                }\r\n                           \r\n                </tbody>\r\n            </table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Emp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}