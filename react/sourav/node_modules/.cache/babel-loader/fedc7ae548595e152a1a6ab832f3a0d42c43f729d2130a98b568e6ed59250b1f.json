{"ast":null,"code":"var _jsxFileName = \"D:\\\\J-spider_Learning\\\\react\\\\sourav\\\\src\\\\Component\\\\8 useState Hook\\\\new\\\\QueAns.jsx\";\n// import React, { useState } from \"react\";\nimport mcqData from \"./data\";\nimport ToggleQue from \"./ToggleQue\";\nimport \"./mcq.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QueAns = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mcq\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: \"Mcq Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: mcqData.map(elem => {\n          let {\n            id,\n            que,\n            ans\n          } = elem;\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: Show,\n                className: \"btn btn-primary\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\" \", que]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 20,\n                  columnNumber: 21\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\" \", msg ? /*#__PURE__*/_jsxDEV(ArrowCircleDownIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 23,\n                    columnNumber: 30\n                  }, this) : /*#__PURE__*/_jsxDEV(ArrowCircleUpIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 23,\n                    columnNumber: 56\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 21,\n                  columnNumber: 21\n                }, this), \" \", msg ? setMsg : /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: ans\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 25,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 17\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = QueAns;\nexport default QueAns;\nvar _c;\n$RefreshReg$(_c, \"QueAns\");","map":{"version":3,"names":["mcqData","ToggleQue","jsxDEV","_jsxDEV","Fragment","_Fragment","QueAns","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","elem","id","que","ans","onClick","Show","msg","ArrowCircleDownIcon","ArrowCircleUpIcon","setMsg","_c","$RefreshReg$"],"sources":["D:/J-spider_Learning/react/sourav/src/Component/8 useState Hook/new/QueAns.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\nimport mcqData from \"./data\";\r\nimport ToggleQue from \"./ToggleQue\";\r\nimport \"./mcq.css\";\r\n\r\nconst QueAns = () => {\r\n  return (\r\n    <>\r\n      <div className=\"mcq\">\r\n        <div className=\"header\">Mcq Questions</div>\r\n        <div>\r\n          {mcqData.map((elem) => {\r\n            let { id, que, ans } = elem;\r\n            return (\r\n              <>\r\n                {/* <ToggleQue id={id} que={que} ans={ans} /> */}\r\n\r\n                <div>\r\n                  <button onClick={Show} className=\"btn btn-primary\">\r\n                    <div> {que}</div>{\" \"}\r\n                    <div>\r\n                      {\" \"}\r\n                      {msg ? <ArrowCircleDownIcon /> : <ArrowCircleUpIcon />}\r\n                    </div>{\" \"}\r\n                    {msg ? setMsg : <p>{ans}</p>}\r\n                  </button>\r\n                </div>\r\n              </>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QueAns;\r\n"],"mappings":";AAAA;AACA,OAAOA,OAAO,MAAM,QAAQ;AAC5B,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACnB,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACEJ,OAAA;MAAKK,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBJ,OAAA;QAAKK,SAAS,EAAC,QAAQ;QAAAD,QAAA,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3CT,OAAA;QAAAI,QAAA,EACGP,OAAO,CAACa,GAAG,CAAEC,IAAI,IAAK;UACrB,IAAI;YAAEC,EAAE;YAAEC,GAAG;YAAEC;UAAI,CAAC,GAAGH,IAAI;UAC3B,oBACEX,OAAA,CAAAE,SAAA;YAAAE,QAAA,eAGEJ,OAAA;cAAAI,QAAA,eACEJ,OAAA;gBAAQe,OAAO,EAAEC,IAAK;gBAACX,SAAS,EAAC,iBAAiB;gBAAAD,QAAA,gBAChDJ,OAAA;kBAAAI,QAAA,GAAK,GAAC,EAACS,GAAG;gBAAA;kBAAAP,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,EAAC,GAAG,eACrBT,OAAA;kBAAAI,QAAA,GACG,GAAG,EACHa,GAAG,gBAAGjB,OAAA,CAACkB,mBAAmB;oBAAAZ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,gBAAGT,OAAA,CAACmB,iBAAiB;oBAAAb,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnD,CAAC,EAAC,GAAG,EACTQ,GAAG,GAAGG,MAAM,gBAAGpB,OAAA;kBAAAI,QAAA,EAAIU;gBAAG;kBAAAR,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtB;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN;UAAC,gBACN,CAAC;QAEP,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP,CAAC;AAACY,EAAA,GA7BIlB,MAAM;AA+BZ,eAAeA,MAAM;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}