{"ast":null,"code":"var _jsxFileName = \"D:\\\\J-spider_Learning\\\\react\\\\sourav\\\\src\\\\Component\\\\17 NodeClasscreateReactProject\\\\EmojiApi.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./movies.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EmojiApi = () => {\n  _s();\n  let searchField = useRef();\n  let [emoji, setEmoji] = useState([]);\n  let handleSubmit = e => {\n    e.preventDefault();\n    let inputData = searchField.current.value;\n    let fetchApi = () => {\n      fetch(`https://emoji-api.com/emojis?search=${inputData}&access_key=36f4d0c514ee648522598d8dae1ab2e3ac6eb276`).then(elem => elem.json()).then(data => setEmoji(data));\n    };\n    fetchApi();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieapi\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: \"Search Emoji\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"container w-25 form-control mt-2 \",\n            type: \"text\",\n            placeholder: \"Enter Your Movies Name\",\n            ref: searchField\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary helo\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main\",\n            children: emoji.map(data => {\n              let {\n                slug,\n                character,\n                unicodeName,\n                codePoint,\n                group,\n                subGroup\n              } = data;\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card \",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"name  \",\n                    children: [\" \", character]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 48,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(EmojiApi, \"0y+6CxiZOFelJrZ4sITEOxhBVPU=\");\n_c = EmojiApi;\nexport default EmojiApi;\nvar _c;\n$RefreshReg$(_c, \"EmojiApi\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","EmojiApi","_s","searchField","emoji","setEmoji","handleSubmit","e","preventDefault","inputData","current","value","fetchApi","fetch","then","elem","json","data","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","ref","map","slug","character","unicodeName","codePoint","group","subGroup","_c","$RefreshReg$"],"sources":["D:/J-spider_Learning/react/sourav/src/Component/17 NodeClasscreateReactProject/EmojiApi.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./movies.css\";\r\nconst EmojiApi = () => {\r\n  let searchField = useRef();\r\n  let [emoji, setEmoji] = useState([]);\r\n\r\n  let handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let inputData = searchField.current.value;\r\n\r\n    let fetchApi = () => {\r\n      fetch(\r\n        `https://emoji-api.com/emojis?search=${inputData}&access_key=36f4d0c514ee648522598d8dae1ab2e3ac6eb276`\r\n      )\r\n        .then((elem) => elem.json())\r\n        .then((data) => setEmoji(data));\r\n    };\r\n    fetchApi();\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"movieapi\">\r\n        <div className=\"header\">Search Emoji</div>\r\n\r\n        <div>\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              className=\"container w-25 form-control mt-2 \"\r\n              type=\"text\"\r\n              placeholder=\"Enter Your Movies Name\"\r\n              ref={searchField}\r\n            />\r\n            <button className=\"btn btn-primary helo\">Submit</button>\r\n\r\n            <div className=\"main\">\r\n              {emoji.map((data) => {\r\n                let {\r\n                  slug,\r\n                  character,\r\n                  unicodeName,\r\n                  codePoint,\r\n                  group,\r\n                  subGroup,\r\n                } = data;\r\n                return (\r\n                  <>\r\n                    <div className=\"card \">\r\n                      <div className=\"name  \"> {character}</div>\r\n                    </div>\r\n                  </>\r\n                );\r\n              })}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmojiApi;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}