{"ast":null,"code":"var _jsxFileName = \"D:\\\\J-spider_Learning\\\\react\\\\sourav\\\\src\\\\Component\\\\8 useState Hook\\\\table\\\\TableToggle.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TableToggle = () => {\n  _s();\n  const [msg, showMsg] = useState(true);\n  let ShowMsg = () => {\n    showMsg(!msg);\n  };\n\n  //   !===========================\n  let persons = [{\n    id: 1,\n    fname: \"Abhi\",\n    lname: \"Ram\",\n    age: 50\n  }, {\n    id: 2,\n    fname: \"Darshan\",\n    lname: \"JS\",\n    age: 45\n  }, {\n    id: 3,\n    fname: \"Abhijeet\",\n    lname: \"Singh\",\n    age: 69\n  }];\n  let [users, setUsers] = useState(persons);\n  // console.log(users)\n\n  let viewUser = (lname, age) => {\n    alert(`${lname} is ${age}`);\n  };\n  let deleteUser = (id, lname) => {\n    // let x=users.filter((elem)=>{\n    //     return elem.id !== id\n    // })\n    // setUsers([...x])\n\n    let bool = window.confirm(`Do you want to delete ${lname} data...?`);\n    if (bool) {\n      setUsers([...users.filter(elem => elem.id !== id)]);\n      alert(`${lname} is deleted`);\n    } else {\n      alert(`${lname} data is not deleted`);\n    }\n  };\n  let deleteAllUser = () => {\n    let bool = window.confirm(`Do you want to delete all users`);\n    bool ? setUsers([]) : alert(\"Data is not deletd\");\n  };\n  let addUsers = () => {\n    let fnm = prompt(\"Enter First Name\");\n    let lnm = prompt(\"Enter Last Name\");\n    let age = prompt(\"Enter Age\");\n    let newUser = {\n      id: users.length + 1,\n      fname: fnm,\n      lname: lnm,\n      age: age\n    };\n    setUsers([...users, newUser]);\n  };\n  let dupli = (fname, lname, age) => {\n    let newUser = {\n      id: users.length + 1,\n      fname: fname,\n      lname: lname,\n      age: age\n    };\n    setUsers([...users, newUser]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary text-warning  \",\n      onClick: ShowMsg,\n      children: [msg ? \"Show Table Data\" : \"Hide Table Data \", msg ? showMsg : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(TableToggle, \"Z1OwMdM7hNn0jZdzW2b/QWGjzCE=\");\n_c = TableToggle;\nexport default TableToggle;\nvar _c;\n$RefreshReg$(_c, \"TableToggle\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","TableToggle","_s","msg","showMsg","useState","ShowMsg","persons","id","fname","lname","age","users","setUsers","viewUser","alert","deleteUser","bool","window","confirm","filter","elem","deleteAllUser","addUsers","fnm","prompt","lnm","newUser","length","dupli","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/J-spider_Learning/react/sourav/src/Component/8 useState Hook/table/TableToggle.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst TableToggle = () => {\r\n  const [msg, showMsg] = useState(true);\r\n  let ShowMsg = () => {\r\n    showMsg(!msg);\r\n  };\r\n\r\n//   !===========================\r\nlet persons = [\r\n    { id: 1, fname: \"Abhi\", lname: \"Ram\", age: 50 },\r\n    { id: 2, fname: \"Darshan\", lname: \"JS\", age: 45 },\r\n    { id: 3, fname: \"Abhijeet\", lname: \"Singh\", age: 69 },\r\n  ];\r\n\r\n  let [users, setUsers] = useState(persons);\r\n  // console.log(users)\r\n\r\n  let viewUser = (lname, age) => {\r\n    alert(`${lname} is ${age}`);\r\n  };\r\n\r\n  let deleteUser = (id, lname) => {\r\n    // let x=users.filter((elem)=>{\r\n    //     return elem.id !== id\r\n    // })\r\n    // setUsers([...x])\r\n\r\n    let bool = window.confirm(`Do you want to delete ${lname} data...?`);\r\n\r\n    if (bool) {\r\n      setUsers([...users.filter((elem) => elem.id !== id)]);\r\n      alert(`${lname} is deleted`);\r\n    } else {\r\n      alert(`${lname} data is not deleted`);\r\n    }\r\n  };\r\n  let deleteAllUser = () => {\r\n    let bool = window.confirm(`Do you want to delete all users`);\r\n    bool ? setUsers([]) : alert(\"Data is not deletd\");\r\n  };\r\n\r\n  let addUsers = () => {\r\n    let fnm = prompt(\"Enter First Name\");\r\n    let lnm = prompt(\"Enter Last Name\");\r\n    let age = prompt(\"Enter Age\");\r\n\r\n    let newUser = {\r\n      id: users.length + 1,\r\n      fname: fnm,\r\n      lname: lnm,\r\n      age: age,\r\n    };\r\n    setUsers([...users, newUser]);\r\n  };\r\n\r\n  let dupli = (fname, lname, age) => {\r\n    let newUser = {\r\n      id: users.length + 1,\r\n      fname: fname,\r\n      lname: lname,\r\n      age: age,\r\n    };\r\n    setUsers([...users, newUser]);\r\n  };\r\n  return (\r\n    <>\r\n      <button className=\"btn btn-primary text-warning  \" onClick={ShowMsg}>\r\n        {msg ? \"Show Table Data\" : \"Hide Table Data \"}\r\n        {msg ? (\r\n          showMsg\r\n        ) : (\r\n          <p>\r\n          \r\n\r\n\r\n          \r\n          </p>\r\n        )}\r\n      </button>\r\n      <p>\r\n        {\r\n            msg\r\n        }\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TableToggle;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}