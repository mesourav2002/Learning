{"ast":null,"code":"var _jsxFileName = \"D:\\\\J-spider_Learning\\\\Projects\\\\Project-Jspider\\\\src\\\\Project2Component\\\\Admin\\\\AddUsers.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddUsers = () => {\n  _s();\n  let date = new Date();\n  let fnm = useRef();\n  let lnm = useRef();\n  let email = useRef();\n  let place = useRef();\n  let dob = useRef();\n  let [users, setUsers] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:4000/users\").then(response => response.json()).then(data => setUsers(data)).catch(error => console.error(\"Error fetching users:\", error));\n  }, [user]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    let newUser = {\n      id: users.length + 1,\n      FirstName: fnm.current.vlue,\n      LastName: lnm.current.vlue,\n      Email: email.current.vlue,\n      State: place.current.vlue,\n      DOB: dob.current.vlue,\n      Time: date\n    };\n    fetch(`http://localhost:4000/users`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newUser)\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addBooks\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: fnm,\n        type: \"text\",\n        placeholder: \"Enter First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: lnm,\n        type: \"text\",\n        placeholder: \"Enter Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: email,\n        type: \"email\",\n        placeholder: \"Enter email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: place,\n        type: \"text\",\n        placeholder: \"Enter Place\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: dob,\n        type: \"date\",\n        placeholder: \"Date of Birth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(AddUsers, \"VVxCDBjwMpB4Ma0JUqZdU5EcOFs=\");\n_c = AddUsers;\nexport default AddUsers;\nvar _c;\n$RefreshReg$(_c, \"AddUsers\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","AddUsers","_s","date","Date","fnm","lnm","email","place","dob","users","setUsers","useEffect","fetch","then","response","json","data","catch","error","console","user","handleSubmit","e","preventDefault","newUser","id","length","FirstName","current","vlue","LastName","Email","State","DOB","Time","method","headers","body","JSON","stringify","className","children","onSubmit","ref","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/J-spider_Learning/Projects/Project-Jspider/src/Project2Component/Admin/AddUsers.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\nconst AddUsers = () => {\r\n  let date = new Date();\r\n  let fnm = useRef();\r\n  let lnm = useRef();\r\n  let email = useRef();\r\n  let place = useRef();\r\n  let dob = useRef();\r\n\r\n  let [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:4000/users\")\r\n      .then((response) => response.json())\r\n      .then((data) => setUsers(data))\r\n      .catch((error) => console.error(\"Error fetching users:\", error));\r\n  }, [user]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let newUser = {\r\n      id: users.length + 1,\r\n      FirstName: fnm.current.vlue,\r\n      LastName: lnm.current.vlue,\r\n      Email: email.current.vlue,\r\n      State: place.current.vlue,\r\n      DOB: dob.current.vlue,\r\n      Time: date,\r\n    };\r\n\r\n    fetch(`http://localhost:4000/users`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(newUser),\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"addBooks\">\r\n      <form onSubmit={handleSubmit}>\r\n        <input ref={fnm} type=\"text\" placeholder=\"Enter First Name\" />\r\n        <input ref={lnm} type=\"text\" placeholder=\"Enter Last Name\" />\r\n        <input ref={email} type=\"email\" placeholder=\"Enter email Address\" />\r\n        <input ref={place} type=\"text\" placeholder=\"Enter Place\" />\r\n        <input ref={dob} type=\"date\" placeholder=\"Date of Birth\" />\r\n        <button>Add Users</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddUsers;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}