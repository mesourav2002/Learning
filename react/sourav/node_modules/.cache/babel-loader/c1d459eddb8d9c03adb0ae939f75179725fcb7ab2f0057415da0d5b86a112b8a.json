{"ast":null,"code":"var _jsxFileName = \"D:\\\\J-spider_Learning\\\\react\\\\sourav\\\\src\\\\Component\\\\16 Projects Fakestpore Api\\\\FetchApi.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FetchApi = () => {\n  _s();\n  let [store, setStore] = useState([]);\n  useEffect(() => {\n    fetch(\"https://fakestoreapi.com/products\").then(res => res.json()).then(data => setStore(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: store.map(elem => {\n        let {\n          id,\n          title,\n          prise,\n          description,\n          image\n        } = elem;\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card \",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"name \",\n              children: [\"Movies - \", Title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: Poster,\n                alt: \"Image is Not Yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"year\",\n              children: Year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 18\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(FetchApi, \"M0nbQv5iRVc+Xzcuj2a9RLW9bj0=\");\n_c = FetchApi;\nexport default FetchApi;\nvar _c;\n$RefreshReg$(_c, \"FetchApi\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","FetchApi","_s","store","setStore","fetch","then","res","json","data","children","map","elem","id","title","prise","description","image","className","Title","fileName","_jsxFileName","lineNumber","columnNumber","src","Poster","alt","Year","_c","$RefreshReg$"],"sources":["D:/J-spider_Learning/react/sourav/src/Component/16 Projects Fakestpore Api/FetchApi.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst FetchApi = () => {\r\n  let [store, setStore] = useState([]);\r\n  useEffect( () => {\r\n     fetch(\"https://fakestoreapi.com/products\")\r\n      .then((res) => res.json())\r\n      .then((data) => setStore(data));\r\n  },[]);\r\n  return (\r\n    <>\r\n      <div>\r\n        {store.map((elem) => {\r\n          let { id, title, prise, description, image } = elem;\r\n          return (\r\n            <>\r\n                 <div className=\"card \">\r\n                      <div className=\"name \">Movies - {Title}</div>\r\n                      <div className=\"image\">\r\n                        <img src={Poster} alt=\"Image is Not Yet\" />\r\n                      </div>\r\n                      <div className=\"year\">{Year}</div>\r\n                    </div>\r\n            </>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FetchApi;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpCD,SAAS,CAAE,MAAM;IACdU,KAAK,CAAC,mCAAmC,CAAC,CACxCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKL,QAAQ,CAACK,IAAI,CAAC,CAAC;EACnC,CAAC,EAAC,EAAE,CAAC;EACL,oBACEX,OAAA,CAAAE,SAAA;IAAAU,QAAA,eACEZ,OAAA;MAAAY,QAAA,EACGP,KAAK,CAACQ,GAAG,CAAEC,IAAI,IAAK;QACnB,IAAI;UAAEC,EAAE;UAAEC,KAAK;UAAEC,KAAK;UAAEC,WAAW;UAAEC;QAAM,CAAC,GAAGL,IAAI;QACnD,oBACEd,OAAA,CAAAE,SAAA;UAAAU,QAAA,eACKZ,OAAA;YAAKoB,SAAS,EAAC,OAAO;YAAAR,QAAA,gBACjBZ,OAAA;cAAKoB,SAAS,EAAC,OAAO;cAAAR,QAAA,GAAC,WAAS,EAACS,KAAK;YAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC7CzB,OAAA;cAAKoB,SAAS,EAAC,OAAO;cAAAR,QAAA,eACpBZ,OAAA;gBAAK0B,GAAG,EAAEC,MAAO;gBAACC,GAAG,EAAC;cAAkB;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxC,CAAC,eACNzB,OAAA;cAAKoB,SAAS,EAAC,MAAM;cAAAR,QAAA,EAAEiB;YAAI;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B;QAAC,gBACZ,CAAC;MAEP,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC,gBACN,CAAC;AAEP,CAAC;AAACrB,EAAA,CA3BID,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AA6Bd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}