{"ast":null,"code":"var _jsxFileName = \"D:\\\\J-spider_Learning\\\\Projects\\\\Project-Jspider\\\\src\\\\Project2Component\\\\Admin\\\\AddBooks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddBooks = () => {\n  _s();\n  let bookTitle = useRef();\n  let imgUrl = useRef();\n  let pageCountt = useRef();\n  let [books, setBooks] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:4000/users\").then(response => response.json()).then(data => setBooks(data));\n  }, [books]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    let date = new Date();\n    let newBook = {\n      title: bookTitle.current.value,\n      isbn: \"\",\n      pageCount: pageCountt.current.value,\n      publishedDate: {\n        $date: date\n      },\n      thumbnailUrl: imgUrl.current.value,\n      shortDescription: \"\",\n      longDescription: \"\",\n      status: \"PUBLISH\",\n      authors: [\"\"],\n      categories: [\"\"]\n    };\n    fetch(`http://localhost:4000/books`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newBook)\n    });\n    setTimeout(() => {\n      bookTitle.current.value = \"\";\n      imgUrl.current.value = \"\";\n      pageCountt.current.value = \"\";\n    }, 500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addBooks\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: bookTitle,\n        type: \"text\",\n        placeholder: \"Enter Book Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: imgUrl,\n        type: \"text\",\n        placeholder: \"Enter Image URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: pageCountt,\n        type: \"text\",\n        placeholder: \"Enter Page Count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(AddBooks, \"AjE1KpvLlJiIjiuQVwjb8TCxEu8=\");\n_c = AddBooks;\nexport default AddBooks;\nvar _c;\n$RefreshReg$(_c, \"AddBooks\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","AddBooks","_s","bookTitle","imgUrl","pageCountt","books","setBooks","useState","fetch","then","response","json","data","handleSubmit","e","preventDefault","date","Date","newBook","title","current","value","isbn","pageCount","publishedDate","$date","thumbnailUrl","shortDescription","longDescription","status","authors","categories","method","headers","body","JSON","stringify","setTimeout","className","children","onSubmit","ref","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/J-spider_Learning/Projects/Project-Jspider/src/Project2Component/Admin/AddBooks.jsx"],"sourcesContent":["import React, { useRef ,useEffect} from \"react\";\r\n\r\nconst AddBooks = () => {\r\n  let bookTitle = useRef();\r\n  let imgUrl = useRef();\r\n  let pageCountt = useRef();\r\n\r\n  let [books, setBooks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:4000/users\")\r\n      .then((response) => response.json())\r\n      .then((data) => setBooks(data));\r\n  }, [books]);\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let date = new Date();\r\n\r\n    let newBook = {\r\n      title: bookTitle.current.value,\r\n      isbn: \"\",\r\n      pageCount: pageCountt.current.value,\r\n      publishedDate: {\r\n        $date: date,\r\n      },\r\n      thumbnailUrl: imgUrl.current.value,\r\n      shortDescription: \"\",\r\n      longDescription: \"\",\r\n      status: \"PUBLISH\",\r\n      authors: [\"\"],\r\n      categories: [\"\"],\r\n    };\r\n    fetch(`http://localhost:4000/books`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(newBook),\r\n    });\r\n\r\n    setTimeout(() => {\r\n      bookTitle.current.value = \"\";\r\n      imgUrl.current.value = \"\";\r\n      pageCountt.current.value = \"\";\r\n    }, 500);\r\n  };\r\n  return (\r\n    <div className=\"addBooks\">\r\n      <form onSubmit={handleSubmit}>\r\n        <input ref={bookTitle} type=\"text\" placeholder=\"Enter Book Name\" />\r\n        <input ref={imgUrl} type=\"text\" placeholder=\"Enter Image URL\" />\r\n        <input ref={pageCountt} type=\"text\" placeholder=\"Enter Page Count\" />\r\n        <button>Add Book</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBooks;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}