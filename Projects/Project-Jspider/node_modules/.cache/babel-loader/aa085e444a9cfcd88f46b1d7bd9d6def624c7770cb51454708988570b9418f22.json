{"ast":null,"code":"var _jsxFileName = \"D:\\\\J-spider_Learning\\\\Projects\\\\Project-Jspider\\\\src\\\\ProjectShopping\\\\Shopping.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport \"./style/Shopping.css\";\nimport Navbar from \"./Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Shopping = () => {\n  _s();\n  // !================\n\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleMenu = () => {\n    setIsOpen(!isOpen);\n  };\n\n  // !=============\n  let Cart = useRef();\n  let SideBar = useRef();\n  let shopping = useRef();\n  let [bool, setBool] = useState(true);\n  let barOpen = () => {\n    SideBar.current.classList.toggle(\"open\");\n    shopping.current.classList.toggle(\"open\");\n  };\n  let cartOpen = () => {\n    Cart.current.classList.toggle(\"open\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      bar: barOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: SideBar,\n        className: \"sideBar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: shopping,\n        className: \"shopping\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: barOpen,\n          children: \"SideBar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: cartOpen,\n          children: \"Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: Cart,\n        className: \"cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true);\n};\n_s(Shopping, \"sFKKHqLJlOyBlirXkzQgIDtINYI=\");\n_c = Shopping;\nexport default Shopping;\nvar _c;\n$RefreshReg$(_c, \"Shopping\");","map":{"version":3,"names":["React","useRef","useState","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","Shopping","_s","isOpen","setIsOpen","toggleMenu","Cart","SideBar","shopping","bool","setBool","barOpen","current","classList","toggle","cartOpen","children","bar","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","onClick","_c","$RefreshReg$"],"sources":["D:/J-spider_Learning/Projects/Project-Jspider/src/ProjectShopping/Shopping.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport \"./style/Shopping.css\";\r\nimport Navbar from \"./Navbar\";\r\nconst Shopping = () => {\r\n  // !================\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  // !=============\r\n  let Cart = useRef();\r\n  let SideBar = useRef();\r\n  let shopping = useRef();\r\n\r\n  let [bool, setBool] = useState(true);\r\n\r\n  let barOpen = () => {\r\n    SideBar.current.classList.toggle(\"open\");\r\n    shopping.current.classList.toggle(\"open\");\r\n  };\r\n  let cartOpen = () => {\r\n    Cart.current.classList.toggle(\"open\");\r\n  };\r\n  return (\r\n    <>\r\n      <Navbar bar={barOpen} />\r\n      <div className=\"main\">\r\n        <div ref={SideBar} className=\"sideBar\"></div>\r\n        <div ref={shopping} className=\"shopping\">\r\n          <button onClick={barOpen}>SideBar</button>\r\n          <button onClick={cartOpen}>Cart</button>\r\n        </div>\r\n        <div ref={Cart} className=\"cart\"></div>\r\n      </div>{\" \"}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shopping;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAO,sBAAsB;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC9B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB;;EAEA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMU,UAAU,GAAGA,CAAA,KAAM;IACvBD,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;;EAED;EACA,IAAIG,IAAI,GAAGZ,MAAM,CAAC,CAAC;EACnB,IAAIa,OAAO,GAAGb,MAAM,CAAC,CAAC;EACtB,IAAIc,QAAQ,GAAGd,MAAM,CAAC,CAAC;EAEvB,IAAI,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAEpC,IAAIgB,OAAO,GAAGA,CAAA,KAAM;IAClBJ,OAAO,CAACK,OAAO,CAACC,SAAS,CAACC,MAAM,CAAC,MAAM,CAAC;IACxCN,QAAQ,CAACI,OAAO,CAACC,SAAS,CAACC,MAAM,CAAC,MAAM,CAAC;EAC3C,CAAC;EACD,IAAIC,QAAQ,GAAGA,CAAA,KAAM;IACnBT,IAAI,CAACM,OAAO,CAACC,SAAS,CAACC,MAAM,CAAC,MAAM,CAAC;EACvC,CAAC;EACD,oBACEhB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACElB,OAAA,CAACF,MAAM;MAACqB,GAAG,EAAEN;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxBvB,OAAA;MAAKwB,SAAS,EAAC,MAAM;MAAAN,QAAA,gBACnBlB,OAAA;QAAKyB,GAAG,EAAEhB,OAAQ;QAACe,SAAS,EAAC;MAAS;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC7CvB,OAAA;QAAKyB,GAAG,EAAEf,QAAS;QAACc,SAAS,EAAC,UAAU;QAAAN,QAAA,gBACtClB,OAAA;UAAQ0B,OAAO,EAAEb,OAAQ;UAAAK,QAAA,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC1CvB,OAAA;UAAQ0B,OAAO,EAAET,QAAS;UAAAC,QAAA,EAAC;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACNvB,OAAA;QAAKyB,GAAG,EAAEjB,IAAK;QAACgB,SAAS,EAAC;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,EAAC,GAAG;EAAA,eACV,CAAC;AAEP,CAAC;AAACnB,EAAA,CApCID,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAsCd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}